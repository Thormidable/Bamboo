<map id="G" name="G">
<area shape="rect" id="node2" href="$classc_render_object.html" title="This class contains the base code for all renderable objects. Any renderable object should inherit th..." alt="" coords="1951,653,2060,683"/>
<area shape="rect" id="node4" href="$classc_collision_object.html" title="This Object is the base object for detecting collisions. This object should be created and passed a p..." alt="" coords="1305,316,1423,345"/>
<area shape="rect" id="node31" href="$classc_linked_node.html" title="cLinkedNode\&lt; cCollisionObject \&gt;" alt="" coords="1548,268,1764,297"/>
<area shape="rect" id="node6" href="$classc_process.html" title="This is the base code for a process. This will automatically create a new process. It will hand itself to cKernel to be processed every frame. Any Processes created by the user should inherit this type to be handled by cKernel automatically. Initialisation code should go in the constructor of the user type. Linking to cKernel is performed automatically by cProcess. Update code should go in the function Run(). Coed performed when a process is killed should go in the function Stop(). NOT the destructor. Code to handle Sleeping and Waking signals should go in OnSleep() and OnWake(). Code to handle interaction of two processes should go in either processes UserSignal() function." alt="" coords="1049,316,1127,345"/>
<area shape="rect" id="node16" href="$classc_linked_node.html" title="cLinkedNode\&lt; cProcess \&gt;" alt="" coords="233,285,409,315"/>
<area shape="rect" id="node26" href="$classc_parent_stack.html" title="This class will automatically track the parents and children of each process. When a new process is c..." alt="" coords="1313,191,1415,220"/>
<area shape="rect" id="node8" href="$classc_signal.html" title="Class for handling Signals sent between objects (cProcess, cRenderObject, cCollisionObject). Allows the user to wake, sleep and kill objects. For cProcess (while cParentStack is enabled) also allows signals to be sent to a process that will recursively affect all the children of that process. Possible signals to be passed in are _S_SLEEP,_S_WAKE,_S_KILL,_S_SLEEP_TREE, _S_WAKE_TREE,_S_KILL_TREE User Specified Signals are controlled by the class cUserSignal." alt="" coords="815,471,879,500"/>
<area shape="rect" id="node10" href="$classc_user_signal.html" title="Class for handling user specified signals sent between classes inheriting cProcess. The function UserSignal should be defined for each object. The signals each class has defined can be independant. The code for processing the signal should be defined in UserSignal as there is no signal buffer. This should be used for dealing with Process interactions, to make a single point of detection of interaction and allowing both processes to handle the interaction. System signals (sleep, wake and kill) should be handled through cSignal." alt="" coords="800,221,893,251"/>
<area shape="rect" id="node12" href="$classc_kernel.html" title="Kernel Object. Handles Processes. Tracks, runs and deletes current processes. Has complete control ov..." alt="" coords="813,316,880,345"/>
<area shape="rect" id="node14" href="$classc_linked_list.html" title="cLinkedList\&lt; cProcess \&gt;" alt="" coords="513,224,679,253"/>
<area shape="rect" id="node20" href="$classc_linked_node.html" title="This is a node class to allow templating of the cLinkedList class. This node will store pointers to t..." alt="" coords="5,285,136,315"/>
<area shape="rect" id="node54" href="$classc_linked_node.html" title="cLinkedNode\&lt; vFile \&gt;" alt="" coords="247,561,396,591"/>
<area shape="rect" id="node35" href="$classc_linked_list.html" title="cLinkedList\&lt; cCollisionObject \&gt;" alt="" coords="1903,268,2108,297"/>
<area shape="rect" id="node39" href="$classc_variable_store.html" title="This is the class through which the user will access Variables in cShaderProgram&#39;s." alt="" coords="1035,756,1141,785"/>
<area shape="rect" id="node43" href="$classc_shader_program.html" title="A cShaderProgram() is a series of cShader() objects compiled into a program. cShaderProgram is a cFil..." alt="" coords="1305,683,1423,712"/>
<area shape="rect" id="node41" href="$classc_user_variable.html" title="This is the general class for buffering an instance of a User defined cShaderProgram Variable..." alt="" coords="795,756,899,785"/>
<area shape="rect" id="node45" href="$classc_file.html" title="This is the base code for files to be loaded from a hdd. Any file object loaded from a hddvshould inh..." alt="" coords="1063,633,1113,663"/>
<area shape="rect" id="node47" href="$classv_file.html" title="This is the virtual file for cFile. It is a virtual representation of the base code for files loaded ..." alt="" coords="45,656,96,685"/>
<area shape="rect" id="node49" href="$classc_file_handler.html" title="This is the handler for the file system. This handles all files loaded from a hdd. It will give allow processes to use files loaded else where, using either the filenames or if loaded from an IMF a file reference. The files are stored in the list mpFiles." alt="" coords="800,583,893,612"/>
<area shape="rect" id="node52" href="$classc_linked_list.html" title="cLinkedList\&lt; vFile \&gt;" alt="" coords="527,527,665,556"/>
<area shape="rect" id="node61" href="$classc_reference_list.html" title="This will Load from an IMF and store a list of string type references. This will load a list of strin..." alt="" coords="1033,687,1143,716"/>
</map>
