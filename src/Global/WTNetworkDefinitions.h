#ifndef __WTNETWORKDEFINITIONS_H__
#define __WTNETWORKDEFINITIONS_H__

#define WT_NETWORK_SIGNAL_NAT_NEW_HOST_CONNECTION 0xFF
#define WT_NETWORK_SIGNAL_NAT_NEW_CLIENT_CONNECTION 0xFE
#define WT_NETWORK_SIGNAL_NAT_CONNECT_CLIENT_TO_GAME 0xFD

#define WT_NETWORK_SIGNAL_NAT_SEND_HOST_DATA 0xFC
#define WT_NETWORK_SIGNAL_NAT_NEW_CLIENT_IN_GAME 0xFB
#define WT_NETWORK_SIGNAL_NAT_GAME_LIST 0xFA
#define WT_NETWORK_SIGNAL_NAT_GAME_STARTING 0xF9

#define WT_PACKET_CODE_ADD_CLIENT 0xF8
#define WT_PACKET_CODE_REQUEST_SYNC 0xF7
#define WT_PACKET_CODE_SYNC_START 0xF6
#define WT_PACKET_CODE_SET_PEER_ID 0xF5

#define WT_NETWORK_SIGNAL_NAT_NON_PACKET 0xF4
#define WT_NETWORK_SIGNAL_NAT_END_SERVER 0xF3

class cPacketCodes
{
  public:
    static NETWORK_SIGNAL_TYPE AddClient;
    static NETWORK_SIGNAL_TYPE RequestSync;
    static NETWORK_SIGNAL_TYPE SyncStart;
    static NETWORK_SIGNAL_TYPE SetPeerID;

    static NETWORK_SIGNAL_TYPE NATSendHostData;
    static NETWORK_SIGNAL_TYPE NATNewClientInGame;
    static NETWORK_SIGNAL_TYPE NATSendGameList;
    static NETWORK_SIGNAL_TYPE NATConnectClientToGame;
    static NETWORK_SIGNAL_TYPE NATGameStarting;
    static NETWORK_SIGNAL_TYPE NATNewHostConnection;
	static NETWORK_SIGNAL_TYPE NATNewClientConnection;

    static NETWORK_SIGNAL_TYPE NATNonPacket;
	static uint8 EndServerData[];
};

#endif
